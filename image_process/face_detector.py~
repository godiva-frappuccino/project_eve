import numpy as np
import sys
sys.path.remove('/opt/ros/kinetic/lib/python2.7/dist-packages')
import cv2

image_path = sys.argv[1]
#face_cascade_path = './models/haarcascade_frontalface_default.xml'
face_cascade_path = 'haarcascade_frontalface_default.xml'
#face_cascade_path = '~/opencv-3.3.0/data/haarcascades/haarcascade_frontalface_default.xml'

face_cascade = cv2.CascadeClassifier(face_cascade_path)

src = cv2.imread(image_path)
src_gray = cv2.cvtColor(src, cv2.COLOR_BGR2GRAY)

print("detector = {}".format(face_cascade))
print(src_gray.shape)
faces = face_cascade.detectMultiScale(src_gray, 1.2, 3)

for face in faces:
    print(face)
    rect = face[2]*face[3]

    
"""
for x, y, w, h in faces:
    cv2.rectangle(src, (x, y), (x + w, y + h), (255, 0, 0), 2)
    face = src[y: y + h, x: x + w]
    face_gray = src_gray[y: y + h, x: x + w]
    eyes = eye_cascade.detectMultiScale(face_gray)
    for (ex, ey, ew, eh) in eyes:
        cv2.rectangle(face, (ex, ey), (ex + ew, ey + eh), (0, 255, 0), 2)
"""
#cv2.imwrite('data/dst/opencv_face_detect_rectangle.jpg', src)
